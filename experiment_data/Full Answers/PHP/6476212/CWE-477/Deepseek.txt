Here is a complete and executable PHP code snippet that replaces the obsolete approach with a modern and secure alternative to download an image from a URL and save it to a folder on the server:

```php
<?php
function GetImageFromUrl($link, $savePath)
{
    // Initialize cURL session
    $ch = curl_init($link);
    
    // Set cURL options
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // Return the result as a string
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); // Follow redirects
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1); // Verify SSL certificate
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); // Verify SSL host
    
    // Execute cURL request
    $result = curl_exec($ch);
    
    // Check for errors
    if (curl_errno($ch)) {
        throw new Exception("cURL Error: " . curl_error($ch));
    }
    
    // Close cURL session
    curl_close($ch);
    
    // Save the image to the specified path
    if (file_put_contents($savePath, $result) === false) {
        throw new Exception("Failed to save the image to $savePath");
    }
    
    return true;
}

// Example usage
try {
    $imageUrl = "https://example.com/path/to/image.jpg"; // Replace with your image URL
    $savePath = __DIR__ . '/img/uploads/photo1.jpg'; // Replace with your desired save path
    
    // Call the function to download and save the image
    if (GetImageFromUrl($imageUrl, $savePath)) {
        echo "Image saved successfully to $savePath";
    }
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}
?>
```

---

### **Key Improvements**:
1. **Security Enhancements**:
   - Added SSL verification (`CURLOPT_SSL_VERIFYPEER` and `CURLOPT_SSL_VERIFYHOST`) to ensure secure communication.
   - Used `file_put_contents` instead of `fopen`, `fwrite`, and `fclose` for safer file handling.

2. **Error Handling**:
   - Added error handling for cURL operations and file saving to ensure robustness.

3. **Flexibility**:
   - The function now accepts a `$savePath` parameter, allowing you to specify the exact location and filename for the saved image.

4. **Modern Practices**:
   - Removed unnecessary `CURLOPT_POST` option since it's not required for downloading files.
   - Used `__DIR__` to ensure the save path is relative to the script's directory.

---

### **How to Use**:
1. Replace `$imageUrl` with the actual URL of the image you want to download.
2. Replace `$savePath` with the desired save location and filename on your server.
3. Run the script, and it will download and save the image securely.

This solution adheres to modern PHP practices and ensures secure and reliable image downloading.