To handle file upload errors using a try-catch statement in PHP, you'll need to use custom exceptions because file upload errors don't directly throw exceptions. Here's how you can implement this:

```php
<?php

// Custom Exception Class
class FileUploadException extends Exception {}

function uploadFile($file) {
    $uploadDirectory = $_SERVER['DOCUMENT_ROOT'] . '/uploads/';
    $filePath = $uploadDirectory . basename($file['name']);

    try {
        // Check for upload errors
        if ($file['error'] !== UPLOAD_ERR_OK) {
            throw new FileUploadException('Upload error code: ' . $file['error']);
        }

        // Attempt to move the uploaded file
        $move = move_uploaded_file($file['tmp_name'], $filePath);

        if (!$move) {
            throw new FileUploadException('Failed to move uploaded file.');
        }

        echo 'Upload Complete!';

    } catch (FileUploadException $e) {
        // Handle specific file upload error
        echo 'File upload failed: ' . $e->getMessage();
    } catch (Exception $e) {
        // Handle general exceptions
        echo 'An error occurred: ' . $e->getMessage();
    }
}

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_FILES['file'])) {
    uploadFile($_FILES['file']);
}
```

### Explanation:

1. **Custom Exception Class:** 
   - We defined a custom exception class, `FileUploadException`, to handle file upload-specific errors.

2. **Function `uploadFile`:**
   - This function attempts to move the uploaded file by first checking for errors using the `$_FILES['file']['error']` property.
   - If there's an error during upload or if `move_uploaded_file` fails, a `FileUploadException` is thrown.
   
3. **Try-Catch Block:**
   - The `try` block contains the logic for moving the uploaded file.
   - The `catch(FileUploadException $e)` block handles specific file upload problems.
   - The `catch(Exception $e)` block is used to handle any other unexpected exceptions.

This code sets up a more robust method for dealing with file upload errors and is beneficial when tracking, logging, or providing feedback related to why an upload may have failed.