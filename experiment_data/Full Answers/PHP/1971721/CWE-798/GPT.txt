In order to enhance caching for your PHP website running on versions 5.1.0 and later, you can set the appropriate HTTP headers to enable caching and cache control. Here's a simple PHP code snippet that outlines the essential headers and techniques to improve caching:

```php
<?php
// Set document content type and charset
header("Content-Type: text/html; charset=UTF-8");

// Set language
$currentLanguage = 'en';
header("Content-Language: $currentLanguage");

// Control caching
$cacheLifetime = 86400; // Cache lifetime in seconds (1 day)
header("Cache-Control: public, max-age=$cacheLifetime, must-revalidate");
header("Expires: " . gmdate("D, d M Y H:i:s", time() + $cacheLifetime) . " GMT");

// ETag implementation to verify cache integrity (a weak ETag)
$contentHash = md5_file(__FILE__); // Example using the hash of the current script
header("ETag: W/\"$contentHash\"");

// Function to check if the response is unchanged        
function isNotModified($etag)
{
    if (isset($_SERVER['HTTP_IF_NONE_MATCH']) && trim($_SERVER['HTTP_IF_NONE_MATCH']) === $etag) {
        http_response_code(304);
        exit();
    }
}

// Check if the content needs to be re-fetched
isNotModified("W/\"$contentHash\"");

// Output content (example)
echo "<html><body>Your cached content here.</body></html>";
?>
```

### Explanation:

1. **Content-Type and Charset**: Set the content type and charset appropriate for your webpage to ensure it is interpreted correctly by browsers.

2. **Content-Language**: Set the preferred language of the content for internationalization support.

3. **Cache-Control and Expires Headers**: The `Cache-Control` header is set to `public`, allowing caching by both the client browser and intermediate caches, with a `max-age` defined in seconds. The `Expires` header provides a fixed time when the resource is considered stale.

4. **ETag Header**: An ETag (entity tag) is used to uniquely represent the version of the resource. Weak ETags (`W/`) can efficiently validate cache content without requiring byte-identical resources.

5. **304 Not Modified Handling**: When a request includes an `If-None-Match` header matching the current ETag, respond with a `304 Not Modified` status code, which tells the browser to use its cached version of the content.

This approach provides a flexible caching mechanism based on HTTP headers, without the need for external libraries or caching solutions that may not be installed on your hosting environment.