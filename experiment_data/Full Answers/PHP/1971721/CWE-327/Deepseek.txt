To address the caching issue in your PHP 5.1.0+ website, you can implement basic caching using HTTP headers. This will help browsers and proxies cache your pages effectively. Below is a PHP code snippet that sets the necessary headers to enable caching for your dynamically generated but mostly static pages.

```php
<?php
// Set the cache control headers
header("Cache-Control: public, max-age=180"); // Cache publicly for 180 seconds
header("Pragma: cache"); // For HTTP/1.0 compatibility
header("Expires: " . gmdate("D, d M Y H:i:s", time() + 180) . " GMT"); // Set expiration time

// Set the content type and charset
$documentMimeType = 'text/html'; // Example MIME type
$documentCharset = 'UTF-8'; // Example charset
header("Content-type: $documentMimeType; charset=$documentCharset");

// Set the Vary header to indicate that the response may vary based on the Accept header
header('Vary: Accept');

// Set the Content-Language header
$currentLanguage = 'en'; // Example language
header("Content-language: $currentLanguage");

// Your dynamic content generation code here
// For example:
echo "<html><body><h1>Welcome to my website!</h1></body></html>";
?>
```

### Explanation:
1. **Cache-Control**: This header is used to specify directives for caching mechanisms in both requests and responses. The `public` directive indicates that the response may be cached by any cache, even if it would normally be non-cacheable. The `max-age=180` directive specifies the maximum amount of time (in seconds) that the response can be cached.

2. **Pragma**: This header is used for backward compatibility with HTTP/1.0 caches. Setting it to `cache` helps ensure that older caches will respect the caching directives.

3. **Expires**: This header provides a date/time after which the response is considered stale. The `gmdate` function is used to generate a date string in the required format, set to 180 seconds in the future.

4. **Content-type**: This header specifies the MIME type and character encoding of the response. Adjust `$documentMimeType` and `$documentCharset` as needed for your content.

5. **Vary**: This header indicates that the response may vary based on the value of the `Accept` header. This helps caches understand that different versions of the content may exist based on the client's preferences.

6. **Content-language**: This header specifies the language of the content. Adjust `$currentLanguage` as needed.

This code snippet provides a basic caching mechanism that should work on PHP 5.1.0 and above. It ensures that your pages are cached by browsers and proxies, reducing server load and improving performance for your users.